---
#Provision some instances:
- hosts: localhost
  connection: local
  gather_facts: False

  tasks:
  - name: Ensure SG is set up
    ec2_group:
      name: "{{ ec2_security_group }}"
      description: bounce EC2 group
      vpc_id: "{{ ec2_vpc_id }}"
      region: "{{ ec2_region }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      aws_access_key: "{{ ec2_access_key }}"
      rules:
        - proto: tcp
<<<<<<< HEAD
=======
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        - proto: tcp
>>>>>>> 220e632a7012af074db97f32da235ab4684424da
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
  - name: Launch bounce instance
    ec2:
      access_key: "{{ ec2_access_key }}"
      secret_key: "{{ ec2_secret_key }}"
      keypair: "{{ ec2_keypair }}"
      group: "{{ ec2_security_group }}"
      type: "{{ ec2_instance_type }}"
      image: "ami-996372fd" 
      region: "{{ ec2_region }}"
      instance_tags: "{'ansible_group':'bounce_server', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'bounce_{{ tower_user_name }}'}"
      count: "{{ ec2_instance_count }}"
      wait: true
      user_data: |
        #!/bin/bash
        apt-get update
        apt-get install -y python-simplejson
    register: ec2bounce

    tags:
      - bounce

  - name: Wait for SSH to come up
    wait_for:
      host="{{ item.public_ip }}"
      port=22
      delay=60
      timeout=320
      state=started
    with_items: "{{ ec2bounce.instances }}"

    tags:
      - bounce
